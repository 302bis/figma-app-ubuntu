{"version":3,"file":"builder.js","sourceRoot":"","sources":["../src/builder.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { addValue, Arch, archFromString, isEmptyOrSpaces, warn } from \"builder-util\"\nimport { CancellationToken } from \"builder-util-runtime\"\nimport { executeFinally } from \"builder-util/out/promise\"\nimport chalk from \"chalk\"\nimport { PublishOptions } from \"electron-publish\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport { Configuration } from \"./configuration\"\nimport { DIR_TARGET, Platform } from \"./core\"\nimport { normalizePlatforms, Packager } from \"./packager\"\nimport { PackagerOptions } from \"./packagerApi\"\nimport { PublishManager } from \"./publish/PublishManager\"\n\n/** @internal */\nexport interface BuildOptions extends PackagerOptions, PublishOptions {\n}\n\nexport interface CliOptions extends PackagerOptions, PublishOptions {\n  arch?: string\n\n  x64?: boolean\n  ia32?: boolean\n  armv7l?: boolean\n\n  dir?: boolean\n\n  platform?: string\n\n  project?: string\n}\n\n/** @internal */\nexport function normalizeOptions(args: CliOptions): BuildOptions {\n  if (args.targets != null) {\n    return args\n  }\n\n  if ((args as any).draft != null || (args as any).prerelease != null) {\n    warn(\"--draft and --prerelease is deprecated, please set releaseType (http://electron.build/configuration/publish#GithubOptions-releaseType) in the GitHub publish options instead\")\n  }\n\n  let targets = new Map<Platform, Map<Arch, Array<string>>>()\n\n  function processTargets(platform: Platform, types: Array<string>) {\n    function commonArch(currentIfNotSpecified: boolean): Array<Arch> {\n      if (platform === Platform.MAC) {\n        return args.x64 || currentIfNotSpecified ? [Arch.x64] : []\n      }\n\n      const result = Array<Arch>()\n      if (args.x64) {\n        result.push(Arch.x64)\n      }\n      if (args.armv7l) {\n        result.push(Arch.armv7l)\n      }\n      if (args.ia32) {\n        result.push(Arch.ia32)\n      }\n\n      return result.length === 0 && currentIfNotSpecified ? [archFromString(process.arch)] : result\n    }\n\n    if (args.platform != null) {\n      throw new Error(`--platform cannot be used if --${platform.buildConfigurationKey} is passed`)\n    }\n    if (args.arch != null) {\n      throw new Error(`--arch cannot be used if --${platform.buildConfigurationKey} is passed`)\n    }\n\n    let archToType = targets.get(platform)\n    if (archToType == null) {\n      archToType = new Map<Arch, Array<string>>()\n      targets.set(platform, archToType)\n    }\n\n    if (types.length === 0) {\n      const defaultTargetValue = args.dir ? [DIR_TARGET] : []\n      for (const arch of commonArch(args.dir === true)) {\n        archToType.set(arch, defaultTargetValue)\n      }\n      return\n    }\n\n    for (const type of types) {\n      const suffixPos = type.lastIndexOf(\":\")\n      if (suffixPos > 0) {\n        addValue(archToType, archFromString(type.substring(suffixPos + 1)), type.substring(0, suffixPos))\n      }\n      else {\n        for (const arch of commonArch(true)) {\n          addValue(archToType, arch, type)\n        }\n      }\n    }\n  }\n\n  if (args.mac != null) {\n    processTargets(Platform.MAC, args.mac)\n  }\n\n  if (args.linux != null) {\n    processTargets(Platform.LINUX, args.linux)\n  }\n\n  if (args.win != null) {\n    processTargets(Platform.WINDOWS, args.win)\n  }\n\n  if (targets.size === 0) {\n    if (args.platform == null && args.arch == null) {\n      processTargets(Platform.current(), [])\n    }\n    else {\n      targets = createTargets(normalizePlatforms(args.platform), args.dir ? DIR_TARGET : null, args.arch)\n    }\n  }\n\n  const result = {...args}\n  result.targets = targets\n\n  delete result.dir\n  delete result.mac\n  delete result.linux\n  delete result.win\n  delete result.platform\n  delete result.arch\n\n  const r = result as any\n  delete r.em\n\n  delete r.m\n  delete r.o\n  delete r.l\n  delete r.w\n  delete r.windows\n  delete r.macos\n  delete r.$0\n  delete r._\n  delete r.version\n  delete r.help\n  delete r.c\n\n  delete result.ia32\n  delete result.x64\n  delete result.armv7l\n\n  if (result.project != null && result.projectDir == null) {\n    result.projectDir = result.project\n  }\n  delete result.project\n\n  let config = result.config\n  const deprecatedExtraMetadata = r.extraMetadata\n  delete r.extraMetadata\n\n  // config is array when combining dot-notation values with a config file value (#2016)\n  if (Array.isArray(config)) {\n    const newConfig: Configuration = {}\n\n    for (const configItem of config) {\n      if (typeof configItem === \"object\") {\n        deepAssign(newConfig, configItem)\n      }\n      else if (typeof configItem === \"string\") {\n        newConfig.extends = configItem\n      }\n    }\n\n    config = newConfig\n    result.config = newConfig\n  }\n\n  if (deprecatedExtraMetadata != null) {\n    if (typeof config === \"string\") {\n      // transform to object and specify path to config as extends\n      config = {\n        extends: config,\n        extraMetadata: deprecatedExtraMetadata,\n      };\n      (result as any).config = config\n    }\n    else if (config == null) {\n      config = {};\n      (result as any).config = config\n    }\n    (config as any).extraMetadata = deprecatedExtraMetadata\n  }\n\n  if (config != null && typeof config !== \"string\") {\n    if (config.extraMetadata != null) {\n      coerceTypes(config.extraMetadata)\n    }\n    if (config.mac != null) {\n      // ability to disable code sign using -c.mac.identity=null\n      coerceValue(config.mac, \"identity\")\n    }\n  }\n\n  return result as BuildOptions\n}\n\nfunction coerceValue(host: any, key: string): void {\n  const value = host[key]\n  if (value === \"true\") {\n    host[key] = true\n  }\n  else if (value === \"false\") {\n    host[key] = false\n  }\n  else if (value === \"null\") {\n    host[key] = null\n  }\n  else if (key === \"version\" && typeof value === \"number\") {\n    host[key] = value.toString()\n  }\n  else if (value != null && typeof value === \"object\") {\n    coerceTypes(value)\n  }\n}\n\n/** @private */\nexport function coerceTypes(host: any): any {\n  for (const key of Object.getOwnPropertyNames(host)) {\n    coerceValue(host, key)\n  }\n  return host\n}\n\nexport function createTargets(platforms: Array<Platform>, type?: string | null, arch?: string | null): Map<Platform, Map<Arch, Array<string>>> {\n  const targets = new Map<Platform, Map<Arch, Array<string>>>()\n  for (const platform of platforms) {\n    const archs = platform === Platform.MAC ? [Arch.x64] : (arch === \"all\" ? [Arch.x64, Arch.ia32] : [archFromString(arch == null ? process.arch : arch)])\n    const archToType = new Map<Arch, Array<string>>()\n    targets.set(platform, archToType)\n\n    for (const arch of archs) {\n      archToType.set(arch, type == null ? [] : [type])\n    }\n  }\n  return targets\n}\n\nexport async function build(rawOptions?: CliOptions): Promise<Array<string>> {\n  const options = normalizeOptions(rawOptions || {})\n\n  if (options.cscLink === undefined && !isEmptyOrSpaces(process.env.CSC_LINK)) {\n    options.cscLink = process.env.CSC_LINK\n  }\n  if (options.cscInstallerLink === undefined && !isEmptyOrSpaces(process.env.CSC_INSTALLER_LINK)) {\n    options.cscInstallerLink = process.env.CSC_INSTALLER_LINK\n  }\n  if (options.cscKeyPassword === undefined && !isEmptyOrSpaces(process.env.CSC_KEY_PASSWORD)) {\n    options.cscKeyPassword = process.env.CSC_KEY_PASSWORD\n  }\n  if (options.cscInstallerKeyPassword === undefined && !isEmptyOrSpaces(process.env.CSC_INSTALLER_KEY_PASSWORD)) {\n    options.cscInstallerKeyPassword = process.env.CSC_INSTALLER_KEY_PASSWORD\n  }\n\n  const cancellationToken = new CancellationToken()\n  const packager = new Packager(options, cancellationToken)\n  // because artifact event maybe dispatched several times for different publish providers\n  const artifactPaths = new Set<string>()\n  packager.artifactCreated(event => {\n    if (event.file != null) {\n      artifactPaths.add(event.file)\n    }\n  })\n\n  const publishManager = new PublishManager(packager, options, cancellationToken)\n  const sigIntHandler = () => {\n    warn(\"Cancelled by SIGINT\")\n    cancellationToken.cancel()\n    publishManager.cancelTasks()\n  }\n  process.once(\"SIGINT\", sigIntHandler)\n\n  return await executeFinally(packager.build().then(() => Array.from(artifactPaths)), errorOccurred => {\n    let promise: Promise<any>\n    if (errorOccurred) {\n      publishManager.cancelTasks()\n      promise = BluebirdPromise.resolve(null)\n    }\n    else {\n      promise = publishManager.awaitTasks()\n    }\n\n    return promise\n      .then(() => process.removeListener(\"SIGINT\", sigIntHandler))\n  })\n}\n\n/**\n * @private\n * @internal\n */\nexport function configureBuildCommand(yargs: yargs.Yargs): yargs.Yargs {\n  const publishGroup = \"Publishing:\"\n  const buildGroup = \"Building:\"\n  const deprecated = \"Deprecated:\"\n\n  return yargs\n    .option(\"mac\", {\n      group: buildGroup,\n      alias: [\"m\", \"o\", \"macos\"],\n      description: `Build for macOS, accepts target list (see ${chalk.underline(\"https://goo.gl/5uHuzj\")}).`,\n      type: \"array\",\n    })\n    .option(\"linux\", {\n      group: buildGroup,\n      alias: \"l\",\n      description: `Build for Linux, accepts target list (see ${chalk.underline(\"https://goo.gl/4vwQad\")})`,\n      type: \"array\",\n    })\n    .option(\"win\", {\n      group: buildGroup,\n      alias: [\"w\", \"windows\"],\n      description: `Build for Windows, accepts target list (see ${chalk.underline(\"https://goo.gl/jYsTEJ\")})`,\n      type: \"array\",\n    })\n    .option(\"x64\", {\n      group: buildGroup,\n      description: \"Build for x64\",\n      type: \"boolean\",\n    })\n    .option(\"ia32\", {\n      group: buildGroup,\n      description: \"Build for ia32\",\n      type: \"boolean\",\n    })\n    .option(\"armv7l\", {\n      group: buildGroup,\n      description: \"Build for armv7l\",\n      type: \"boolean\",\n    })\n    .option(\"dir\", {\n      group: buildGroup,\n      description: \"Build unpacked dir. Useful to test.\",\n      type: \"boolean\",\n    })\n    .option(\"publish\", {\n      group: publishGroup,\n      alias: \"p\",\n      description: `Publish artifacts (to GitHub Releases), see ${chalk.underline(\"https://goo.gl/tSFycD\")}`,\n      choices: [\"onTag\", \"onTagOrDraft\", \"always\", \"never\", undefined as any],\n    })\n    .option(\"draft\", {\n      group: deprecated,\n      description: \"Please set releaseType in the GitHub publish options instead\",\n      type: \"boolean\",\n      default: undefined,\n    })\n    .option(\"prerelease\", {\n      group: deprecated,\n      description: \"Please set releaseType in the GitHub publish options instead\",\n      type: \"boolean\",\n      default: undefined,\n    })\n    .option(\"platform\", {\n      group: deprecated,\n      description: \"The target platform (preferred to use --mac, --win or --linux)\",\n      choices: [\"mac\", \"win\", \"linux\", \"darwin\", \"win32\", \"all\", undefined as any],\n    })\n    .option(\"arch\", {\n      group: deprecated,\n      description: \"The target arch (preferred to use --x64 or --ia32)\",\n      choices: [\"ia32\", \"x64\", \"all\", undefined as any],\n    })\n    .option(\"extraMetadata\", {\n      alias: [\"em\"],\n      group: buildGroup,\n      description: \"Deprecated. Use -c.extraMetadata.\",\n    })\n    .option(\"prepackaged\", {\n      alias: [\"pd\"],\n      group: buildGroup,\n      description: \"The path to prepackaged app (to pack in a distributable format)\",\n    })\n    .option(\"projectDir\", {\n      alias: [\"project\"],\n      group: buildGroup,\n      description: \"The path to project directory. Defaults to current working directory.\",\n    })\n    .option(\"config\", {\n      alias: [\"c\"],\n      group: buildGroup,\n      description: \"The path to an electron-builder config. Defaults to `electron-builder.yml` (or `json`, or `json5`), see \" + chalk.underline(\"https://goo.gl/YFRJOM\"),\n    })\n    .group([\"help\", \"version\"], \"Other:\")\n    .example(\"electron-builder -mwl\", \"build for macOS, Windows and Linux\")\n    .example(\"electron-builder --linux deb tar.xz\", \"build deb and tar.xz for Linux\")\n    .example(\"electron-builder --win --ia32\", \"build for Windows ia32\")\n    .example(\"electron-builder --em.foo=bar\", \"set package.json property `foo` to `bar`\")\n    .example(\"electron-builder --config.nsis.unicode=false\", \"configure unicode options for NSIS\")\n}\n"]}
