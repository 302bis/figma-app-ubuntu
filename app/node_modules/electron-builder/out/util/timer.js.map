{"version":3,"file":"timer.js","sourceRoot":"","sources":["../../src/util/timer.ts"],"names":[],"mappings":";;;;;;;;;AAAA,AAAO,AAAE,AAAK,AAAE,AAAM,AAAc;;;;AAMpC;AAGE,gBAA6B,AAAa;AAAb,aAAK,QAAL,AAAK,AAAQ;AAFlC,aAAK,QAAG,AAAO,QAAC,AAAM,AAAE,AAGhC;AAAC;AAED,AAAG;AACD,cAAM,AAAG,MAAG,AAAO,QAAC,AAAM,OAAC,AAAI,KAAC,AAAK,AAAC;AACtC,AAAO,gBAAC,AAAI,AAAC,QAAG,AAAI,KAAC,AAAK,KAAY,cAAE,AAAG,IAAC,AAAC,AAAC,IAAE,AAAI,KAAC,AAAK,MAAC,AAAG,IAAC,AAAC,AAAC,KAAG,AAAO,AAAC,AAAC,AAC/E;AAAC,AACF;;AAED;AACE,AAAG;AACD,AAAS,AACX;AAAC,AACF,AAED,AAAM;;cAAe,AAAa;AAChC,AAAM,WAAC,AAAK,4CAAC,AAAO,AAAC,AAAC,UAAC,IAAI,AAAQ,SAAC,AAAK,AAAC,AAAC,AAAC,SAAC,IAAI,AAAe,AAAE,AACpE;AAAC","sourcesContent":["import { debug } from \"builder-util\"\n\nexport interface Timer {\n  end(): void\n}\n\nclass DevTimer implements Timer {\n  private start = process.hrtime()\n\n  constructor(private readonly label: string) {\n  }\n\n  end(): void {\n    const end = process.hrtime(this.start)\n    console.info(`${this.label}: %ds %dms`, end[0], Math.round(end[1] / 1000000))\n  }\n}\n\nclass ProductionTimer implements Timer {\n  end(): void {\n    // ignore\n  }\n}\n\nexport function time(label: string): Timer {\n  return debug.enabled ? new DevTimer(label) : new ProductionTimer()\n}"]}
