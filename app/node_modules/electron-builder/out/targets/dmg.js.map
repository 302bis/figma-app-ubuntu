{"version":3,"file":"dmg.js","sourceRoot":"","sources":["../../src/targets/dmg.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, AsyncTaskManager, debug, exec, isCanSignDmg, isEmptyOrSpaces, log, spawn, warn } from \"builder-util\"\nimport { copyDir, copyFile, exists, statOrNull } from \"builder-util/out/fs\"\nimport { addLicenseToDmg } from \"dmg-builder/out/dmgLicense\"\nimport { applyProperties, attachAndExecute, computeBackground, computeBackgroundColor, detach } from \"dmg-builder/out/dmgUtil\"\nimport { stat, writeFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport sanitizeFileName from \"sanitize-filename\"\nimport { findIdentity, isSignAllowed } from \"../codeSign\"\nimport { Target } from \"../core\"\nimport MacPackager from \"../macPackager\"\nimport { DmgOptions } from \"../options/macOptions\"\nimport { isMacOsHighSierra } from \"builder-util/out/macosVersion\"\nimport { CancellationToken, BlockMapDataHolder } from \"builder-util-runtime\"\nimport { createDifferentialPackage } from \"app-package-builder\"\n\nexport class DmgTarget extends Target {\n  readonly options: DmgOptions = this.packager.config.dmg || Object.create(null)\n\n  constructor(private readonly packager: MacPackager, readonly outDir: string) {\n    super(\"dmg\")\n  }\n\n  async build(appPath: string, arch: Arch) {\n    const packager = this.packager\n    log(\"Building DMG\")\n\n    const specification = await this.computeDmgOptions()\n    const volumeName = sanitizeFileName(this.computeVolumeName(specification.title))\n\n    const tempDmg = await createStageDmg(await packager.getTempFile(\".dmg\"), appPath, volumeName)\n\n    // https://github.com/electron-userland/electron-builder/issues/2115\n    const backgroundFilename = specification.background == null ? null : path.basename(specification.background)\n    const backgroundFile = backgroundFilename == null ? null : path.resolve(packager.info.projectDir, specification.background!)\n\n    const finalSize = await computeAssetSize(packager.info.cancellationToken, tempDmg, specification, backgroundFile)\n    await exec(\"hdiutil\", [\"resize\", \"-size\", finalSize.toString(), tempDmg])\n\n    const volumePath = path.join(\"/Volumes\", volumeName)\n    if (await exists(volumePath)) {\n      debug(\"Unmounting previous disk image\")\n      await detach(volumePath)\n    }\n\n    if (!await attachAndExecute(tempDmg, true, () => customizeDmg(volumePath, specification, packager, backgroundFile, backgroundFilename))) {\n      return\n    }\n\n    // tslint:disable-next-line:no-invalid-template-strings\n    const artifactName = packager.expandArtifactNamePattern(packager.config.dmg, \"dmg\", null, \"${productName}-\" + (packager.platformSpecificBuildOptions.bundleShortVersion || \"${version}\") + \".${ext}\")\n    const artifactPath = path.join(this.outDir, artifactName)\n\n    // dmg file must not exist otherwise hdiutil failed (https://github.com/electron-userland/electron-builder/issues/1308#issuecomment-282847594), so, -ov must be specified\n    const args = [\"convert\", tempDmg, \"-ov\", \"-format\", specification.format!, \"-o\", artifactPath]\n    if (specification.format === \"UDZO\") {\n      args.push(\"-imagekey\", `zlib-level=${process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL || \"9\"}`)\n    }\n    await spawn(\"hdiutil\", addVerboseIfNeed(args))\n    if (this.options.internetEnabled) {\n      await exec(\"hdiutil\", addVerboseIfNeed([\"internet-enable\"]).concat(artifactPath))\n    }\n\n    const licenseData = await addLicenseToDmg(packager, artifactPath)\n    if (packager.packagerOptions.effectiveOptionComputed != null) {\n      await packager.packagerOptions.effectiveOptionComputed({licenseData})\n    }\n\n    await this.signDmg(artifactPath)\n\n    const blockMapInfo = await createDifferentialPackage(artifactPath, false)\n    const updateInfo: BlockMapDataHolder = {\n      size: blockMapInfo.size,\n      sha512: blockMapInfo.sha512,\n    }\n\n    const blockMapFileSuffix = \".blockmap\"\n    await writeFile(`${artifactPath}${blockMapFileSuffix}`, blockMapInfo.blockMapData)\n\n    const safeArtifactName = packager.computeSafeArtifactName(artifactName, \"dmg\")\n    packager.info.dispatchArtifactCreated({\n      file: artifactPath,\n      safeArtifactName,\n      target: this,\n      arch,\n      packager,\n      isWriteUpdateInfo: true,\n      updateInfo,\n    })\n\n    packager.info.dispatchArtifactCreated({\n      file: `${artifactPath}${blockMapFileSuffix}`,\n      fileContent: blockMapInfo.blockMapData,\n      safeArtifactName: `${safeArtifactName}${blockMapFileSuffix}`,\n      target: this,\n      arch,\n      packager,\n      updateInfo,\n    })\n  }\n\n  private async signDmg(artifactPath: string) {\n    if (!isSignAllowed(false)) {\n      return\n    }\n\n    if (!(await isCanSignDmg())) {\n      warn(\"At least macOS 10.11.5 is required to sign DMG, please update OS.\")\n    }\n\n    const packager = this.packager\n    const qualifier = packager.platformSpecificBuildOptions.identity\n    // explicitly disabled if set to null\n    if (qualifier === null) {\n      // macPackager already somehow handle this situation, so, here just return\n      return\n    }\n\n    const keychainName = (await packager.codeSigningInfo).keychainName\n    const certificateType = \"Developer ID Application\"\n    let identity = await findIdentity(certificateType, qualifier, keychainName)\n    if (identity == null) {\n      identity = await findIdentity(\"Mac Developer\", qualifier, keychainName)\n      if (identity == null) {\n        return\n      }\n    }\n\n    const args = [\"--sign\", identity.hash]\n    if (keychainName != null) {\n      args.push(\"--keychain\", keychainName)\n    }\n    args.push(artifactPath)\n    await exec(\"codesign\", args)\n  }\n\n  computeVolumeName(custom?: string | null): string {\n    const appInfo = this.packager.appInfo\n    const shortVersion = this.packager.platformSpecificBuildOptions.bundleShortVersion || appInfo.version\n\n    if (custom == null) {\n      return `${appInfo.productFilename} ${shortVersion}`\n    }\n\n    return custom\n      .replace(/\\${shortVersion}/g, shortVersion)\n      .replace(/\\${version}/g, appInfo.version)\n      .replace(/\\${name}/g, appInfo.name)\n      .replace(/\\${productName}/g, appInfo.productName)\n  }\n\n  // public to test\n  async computeDmgOptions(): Promise<DmgOptions> {\n    // appdmg\n    const appdmgWindow = (this.options.window as any) || {}\n    const oldPosition = appdmgWindow.position\n    const oldSize = appdmgWindow.size\n    const oldIconSize = (this.options as any)[\"icon-size\"]\n    const oldBackgroundColor = (this.options as any)[\"background-color\"]\n    if (oldPosition != null) {\n      warn(\"dmg.window.position is deprecated, please use dmg.window instead\")\n    }\n    if (oldSize != null) {\n      warn(\"dmg.window.size is deprecated, please use dmg.window instead\")\n    }\n    if (oldIconSize != null) {\n      warn(\"dmg.icon-size is deprecated, please use dmg.iconSize instead\")\n    }\n    if (oldBackgroundColor != null) {\n      warn(\"dmg.background-color is deprecated, please use dmg.backgroundColor instead\")\n    }\n\n    const packager = this.packager\n    const specification = deepAssign<DmgOptions>({\n        window: {\n          x: 400,\n          y: 100,\n        },\n        iconSize: oldIconSize,\n        backgroundColor: oldBackgroundColor,\n        icon: \"icon\" in this.options ? undefined : await packager.getIconPath()\n      },\n      this.options,\n      oldPosition == null ? null : {\n        window: {\n          x: oldPosition.x,\n          y: oldPosition.y,\n        }\n      },\n      oldSize == null ? null : {\n        window: {\n          width: oldSize.width,\n          height: oldSize.height,\n        }\n      })\n\n    if (specification.icon != null && isEmptyOrSpaces(specification.icon)) {\n      throw new Error(\"dmg.icon cannot be specified as empty string\")\n    }\n\n    if (specification.backgroundColor != null) {\n      if (specification.background != null) {\n        throw new Error(\"Both dmg.backgroundColor and dmg.background are specified — please set the only one\")\n      }\n      specification.backgroundColor = computeBackgroundColor(specification.backgroundColor)\n    }\n    else if (!(\"background\" in specification)) {\n      specification.background = await computeBackground(packager)\n    }\n\n    if (specification.format == null) {\n      if (process.env.ELECTRON_BUILDER_COMPRESSION_LEVEL != null) {\n        (specification as any).format = \"UDZO\"\n      }\n      else if (packager.compression === \"store\") {\n        (specification as any).format = \"UDRO\"\n      }\n      else {\n        (specification as any).format = packager.compression === \"maximum\" ? \"UDBZ\" : \"UDZO\"\n      }\n    }\n\n    if (specification.contents == null) {\n      specification.contents = [\n        {\n          x: 130, y: 220\n        },\n        {\n          x: 410, y: 220, type: \"link\", path: \"/Applications\"\n        }\n      ]\n    }\n    return specification\n  }\n}\n\nasync function createStageDmg(tempDmg: string, appPath: string, volumeName: string) {\n  //noinspection SpellCheckingInspection\n  const imageArgs = addVerboseIfNeed([\"create\",\n    \"-srcfolder\", appPath,\n    \"-volname\", volumeName,\n    \"-anyowners\", \"-nospotlight\",\n    \"-format\", \"UDRW\",\n  ])\n\n  if (await isMacOsHighSierra()) {\n    // imageArgs.push(\"-fs\", \"APFS\")\n    imageArgs.push(\"-fs\", \"HFS+\", \"-fsargs\", \"-c c=64,a=16,e=16\")\n  }\n  else {\n    imageArgs.push(\"-fs\", \"HFS+\", \"-fsargs\", \"-c c=64,a=16,e=16\")\n  }\n\n  imageArgs.push(tempDmg)\n  await spawn(\"hdiutil\", imageArgs)\n  return tempDmg\n}\n\nfunction addVerboseIfNeed(args: Array<string>): Array<string> {\n  if (process.env.DEBUG_DMG === \"true\") {\n    args.push(\"-verbose\")\n  }\n  return args\n}\n\nasync function computeAssetSize(cancellationToken: CancellationToken, dmgFile: string, specification: DmgOptions, backgroundFile: string | null) {\n  const asyncTaskManager = new AsyncTaskManager(cancellationToken)\n  asyncTaskManager.addTask(stat(dmgFile))\n\n  if (specification.icon != null) {\n    asyncTaskManager.addTask(statOrNull(specification.icon))\n  }\n\n  if (backgroundFile != null) {\n    asyncTaskManager.addTask(stat(backgroundFile))\n  }\n\n  let result = 32 * 1024\n  for (const stat of await asyncTaskManager.awaitTasks()) {\n    if (stat != null) {\n      result += stat.size\n    }\n  }\n  return result\n}\n\nasync function customizeDmg(volumePath: string, specification: DmgOptions, packager: MacPackager, backgroundFile: string | null, backgroundFilename: string | null) {\n  const asyncTaskManager = new AsyncTaskManager(packager.info.cancellationToken)\n\n  if (backgroundFile != null) {\n    asyncTaskManager.addTask(copyFile(backgroundFile, path.join(volumePath, \".background\", backgroundFilename!!)))\n  }\n\n  const window = specification.window!\n  const env: any = {\n    ...process.env,\n    volumePath,\n    appFileName: `${packager.appInfo.productFilename}.app`,\n    iconSize: specification.iconSize || 80,\n    iconTextSize: specification.iconTextSize || 12,\n\n    windowX: window.x,\n    windowY: window.y,\n\n    VERSIONER_PERL_PREFER_32_BIT: \"true\"\n  }\n\n  if (specification.icon == null) {\n    delete env.volumeIcon\n  }\n  else {\n    const volumeIcon = `${volumePath}/.VolumeIcon.icns`\n    asyncTaskManager.addTask(copyFile((await packager.getResource(specification.icon))!, volumeIcon))\n    env.volumeIcon = volumeIcon\n  }\n\n  if (specification.backgroundColor != null || specification.background == null) {\n    env.backgroundColor = specification.backgroundColor || \"#ffffff\"\n    env.windowWidth = (window.width || 540).toString()\n    env.windowHeight = (window.height || 380).toString()\n  }\n  else {\n    delete env.backgroundColor\n\n    if (window.width == null) {\n      delete env.windowWidth\n    }\n    else {\n      env.windowWidth = window.width.toString()\n    }\n    if (window.height == null) {\n      delete env.windowHeight\n    }\n    else {\n      env.windowHeight = window.height.toString()\n    }\n\n    env.backgroundFilename = backgroundFilename as any\n  }\n\n  await applyProperties(await computeDmgEntries(specification, volumePath, packager, asyncTaskManager), env, asyncTaskManager, packager)\n  return packager.packagerOptions.effectiveOptionComputed == null || !(await packager.packagerOptions.effectiveOptionComputed({volumePath, specification, packager}))\n}\n\nasync function computeDmgEntries(specification: DmgOptions, volumePath: string, packager: MacPackager, asyncTaskManager: AsyncTaskManager) {\n  let result = \"\"\n  for (const c of specification.contents!!) {\n    if (c.path != null && c.path.endsWith(\".app\") && c.type !== \"link\") {\n      warn(`Do not specify path for application: \"${c.path}\". Actual path to app will be used instead.`)\n    }\n\n    const entryPath = c.path || `${packager.appInfo.productFilename}.app`\n    const entryName = c.name || path.basename(entryPath)\n    result += `&makeEntries(\"${entryName}\", Iloc_xy => [ ${c.x}, ${c.y} ]),\\n`\n\n    if (c.type === \"link\") {\n      asyncTaskManager.addTask(exec(\"ln\", [\"-s\", `/${entryPath.startsWith(\"/\") ? entryPath.substring(1) : entryPath}`, `${volumePath}/${entryName}`]))\n    }\n    // use c.path instead of entryPath (to be sure that this logic is not applied to .app bundle) https://github.com/electron-userland/electron-builder/issues/2147\n    else if (!isEmptyOrSpaces(c.path) && (c.type === \"file\" || c.type === \"dir\")) {\n      const source = await packager.getResource(c.path)\n      if (source == null) {\n        warn(`${entryPath} doesn't exist`)\n        continue\n      }\n\n      const destination = `${volumePath}/${entryName}`\n      asyncTaskManager.addTask(c.type === \"dir\" || (await stat(source)).isDirectory() ? copyDir(source, destination) : copyFile(source, destination))\n    }\n  }\n  return result\n}"]}
