{"version":3,"file":"fpm.js","sourceRoot":"","sources":["../../src/targets/fpm.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7x, path7za } from \"7zip-bin\"\nimport BluebirdPromise from \"bluebird-lst\"\nimport { Arch, debug, exec, isMacOsSierra, log, smarten, TmpDir, toLinuxArchString, use, warn } from \"builder-util\"\nimport { getBinFromGithub } from \"builder-util/out/binDownload\"\nimport { computeEnv, getLinuxToolsPath } from \"builder-util/out/bundledTool\"\nimport { unlinkIfExists } from \"builder-util/out/fs\"\nimport { ensureDir, outputFile, readFile } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { Target } from \"../core\"\nimport * as errorMessages from \"../errorMessages\"\nimport { LinuxPackager } from \"../linuxPackager\"\nimport { DebOptions, LinuxTargetSpecificOptions } from \"../options/linuxOptions\"\nimport { getTemplatePath } from \"../util/pathManager\"\nimport { installPrefix, LinuxTargetHelper } from \"./LinuxTargetHelper\"\n\nconst fpmPath = new Lazy(() => {\n  if (process.platform === \"win32\" || process.env.USE_SYSTEM_FPM === \"true\") {\n    return BluebirdPromise.resolve(\"fpm\")\n  }\n\n  const osAndArch = process.platform === \"darwin\" ? \"mac\" : `linux-x86${process.arch === \"ia32\" ? \"\" : \"_64\"}`\n\n  if (process.platform === \"darwin\") {\n    //noinspection SpellCheckingInspection\n    return getBinFromGithub(\"fpm\", \"1.9.2.1-20150715-2.2.2-mac\", \"6sZZoRKkxdmv3a6E5dnZgVl23apGnImhDtGHKhgCE1WOtXBUJnx+w0WvB2HD2/sitz4f93Mf7+QqDCIbfP7LOw==\")\n      .then(it => path.join(it, \"fpm\"))\n  }\n\n  //noinspection SpellCheckingInspection\n  const checksum = process.arch === \"ia32\" ? \"cTT/HdjrQ6qTJQhTZaZC3lyDkRCyNFtNBZ0F7n6mh5B3YmD5ttJZ0xn65pQS03dhEi67A8K1xXNO+tyEEviiIg==\" : \"0zKxWlHuQEUsXJpWll5Bc4OTI8d0jcMVlme9OeHI+Y+s3sv1S4KyGLOEVEkNw6pRU8F+A1Dj5IR95/+U8YzB0A==\"\n  return getBinFromGithub(\"fpm\", `1.9.2-2.3.1-${osAndArch}`, checksum)\n    .then(it => path.join(it, \"fpm\"))\n})\n\nexport default class FpmTarget extends Target {\n  readonly options: LinuxTargetSpecificOptions = {...this.packager.platformSpecificBuildOptions, ...(this.packager.config as any)[this.name]}\n\n  private readonly scriptFiles: Promise<Array<string>>\n\n  constructor(name: string, private readonly packager: LinuxPackager, private readonly helper: LinuxTargetHelper, readonly outDir: string) {\n    super(name, false)\n\n    this.scriptFiles = this.createScripts()\n  }\n\n  private async createScripts(): Promise<Array<string>> {\n    const defaultTemplatesDir = getTemplatePath(\"linux\")\n\n    const packager = this.packager\n    const templateOptions = {\n      // old API compatibility\n      executable: packager.executableName,\n      productFilename: packager.appInfo.productFilename, ...packager.platformSpecificBuildOptions}\n\n    function getResource(value: string | null | undefined, defaultFile: string) {\n      if (value == null) {\n        return path.join(defaultTemplatesDir, defaultFile)\n      }\n      return path.resolve(packager.projectDir, value)\n    }\n\n    return await BluebirdPromise.all<string>([\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterInstall, \"after-install.tpl\"), templateOptions),\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterRemove, \"after-remove.tpl\"), templateOptions)\n    ])\n  }\n\n  async build(appOutDir: string, arch: Arch): Promise<any> {\n    const target = this.name\n\n    log(`Building ${target}`)\n\n    // tslint:disable:no-invalid-template-strings\n    let nameFormat = \"${name}-${version}-${arch}.${ext}\"\n    let isUseArchIfX64 = false\n    if (target === \"deb\") {\n      nameFormat = \"${name}_${version}_${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n    else if (target === \"rpm\") {\n      nameFormat = \"${name}-${version}.${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n\n    const destination = path.join(this.outDir, this.packager.expandArtifactNamePattern(this.options, target, arch, nameFormat, !isUseArchIfX64))\n    await unlinkIfExists(destination)\n    if (this.packager.packagerOptions.prepackaged != null) {\n      await ensureDir(this.outDir)\n    }\n\n    const scripts = await this.scriptFiles\n    const packager = this.packager\n    const appInfo = packager.appInfo\n\n    const projectUrl = await appInfo.computePackageUrl()\n    if (projectUrl == null) {\n      throw new Error(\"Please specify project homepage, see https://electron.build/configuration/configuration#Metadata-homepage\")\n    }\n\n    const options = this.options\n    let author = options.maintainer\n    if (author == null) {\n      const a = packager.info.metadata.author!\n      if (a.email == null) {\n        throw new Error(errorMessages.authorEmailIsMissed)\n      }\n      author = `${a.name} <${a.email}>`\n    }\n\n    const synopsis = options.synopsis\n    const args = [\n      \"-s\", \"dir\",\n      \"-t\", target,\n      \"--architecture\", (target === \"pacman\" && arch === Arch.ia32) ? \"i686\" : toLinuxArchString(arch),\n      \"--name\", appInfo.name,\n      \"--force\",\n      \"--after-install\", scripts[0],\n      \"--after-remove\", scripts[1],\n      \"--description\", smarten(target === \"rpm\" ? this.helper.getDescription(options)! : `${synopsis || \"\"}\\n ${this.helper.getDescription(options)}`),\n      \"--maintainer\", author,\n      \"--vendor\", options.vendor || author,\n      \"--version\", appInfo.version,\n      \"--package\", destination,\n      \"--url\", projectUrl,\n    ]\n\n    if (debug.enabled) {\n      args.push(\n        \"--log\", \"debug\",\n        \"--debug\")\n    }\n\n    const packageCategory = options.packageCategory\n    if (packageCategory != null && packageCategory !== null) {\n      args.push(\"--category\", packageCategory)\n    }\n\n    if (target === \"deb\") {\n      args.push(\"--deb-compression\", (options as DebOptions).compression || \"xz\")\n      use((options as DebOptions).priority, it => args.push(\"--deb-priority\", it!))\n    }\n    else if (target === \"rpm\") {\n      args.push(\"--rpm-os\", \"linux\")\n\n      if (synopsis != null) {\n        args.push(\"--rpm-summary\", smarten(synopsis))\n      }\n    }\n\n    // noinspection JSDeprecatedSymbols\n    let depends = options.depends || this.packager.platformSpecificBuildOptions.depends\n    if (depends == null) {\n      if (target === \"deb\") {\n        depends = [\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\", \"libxss1\"]\n      }\n      else if (target === \"pacman\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"c-ares\", \"ffmpeg\", \"gtk3\", \"http-parser\", \"libevent\", \"libvpx\", \"libxslt\", \"libxss\", \"minizip\", \"nss\", \"re2\", \"snappy\", \"libnotify\", \"libappindicator-gtk2\", \"libappindicator-gtk3\", \"libappindicator-sharp\"]\n      }\n      else if (target === \"rpm\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"libnotify\", \"libappindicator\", \"libXScrnSaver\"]\n      }\n      else {\n        depends = []\n      }\n    }\n    else if (!Array.isArray(depends)) {\n      if (typeof depends === \"string\") {\n        depends = [depends as string]\n      }\n      else {\n        throw new Error(`depends must be Array or String, but specified as: ${depends}`)\n      }\n    }\n\n    for (const dep of depends) {\n      args.push(\"--depends\", dep)\n    }\n\n    use(packager.info.metadata.license, it => args.push(\"--license\", it!))\n    use(appInfo.buildNumber, it => args.push(\"--iteration\", it!))\n\n    use(options.fpm, it => args.push(...it as any))\n\n    args.push(`${appOutDir}/=${installPrefix}/${appInfo.productFilename}`)\n    for (const icon of (await this.helper.icons)) {\n      args.push(`${icon.file}=/usr/share/icons/hicolor/${icon.size}x${icon.size}/apps/${packager.executableName}.png`)\n    }\n\n    const desktopFilePath = await this.helper.writeDesktopEntry(this.options)\n    args.push(`${desktopFilePath}=/usr/share/applications/${this.packager.executableName}.desktop`)\n\n    if (this.packager.packagerOptions.effectiveOptionComputed != null && await this.packager.packagerOptions.effectiveOptionComputed([args, desktopFilePath])) {\n      return\n    }\n\n    const env = {\n      ...process.env,\n      FPM_COMPRESS_PROGRAM: path7x,\n      SZA_PATH: path7za,\n      SZA_COMPRESSION_LEVEL: packager.compression === \"store\" ? \"0\" : \"9\",\n      SZA_ARCHIVE_TYPE: \"xz\",\n    }\n\n    // rpmbuild wants directory rpm with some default config files. Even if we can use dylibbundler, path to such config files are not changed (we need to replace in the binary)\n    // so, for now, brew install rpm is still required.\n    if (target !== \"rpm\" && await isMacOsSierra()) {\n      const linuxToolsPath = await getLinuxToolsPath()\n      Object.assign(env, {\n        PATH: computeEnv(process.env.PATH, [path.join(linuxToolsPath, \"bin\")]),\n        DYLD_LIBRARY_PATH: computeEnv(process.env.DYLD_LIBRARY_PATH, [path.join(linuxToolsPath, \"lib\")]),\n      })\n    }\n    await exec(await fpmPath.value, args, {env})\n\n    this.packager.dispatchArtifactCreated(destination, this, arch)\n  }\n}\n\nasync function writeConfigFile(tmpDir: TmpDir, templatePath: string, options: any): Promise<string> {\n  //noinspection JSUnusedLocalSymbols\n  function replacer(match: string, p1: string) {\n    if (p1 in options) {\n      return options[p1]\n    }\n    else {\n      throw new Error(`Macro ${p1} is not defined`)\n    }\n  }\n  const config = (await readFile(templatePath, \"utf8\"))\n    .replace(/\\${([a-zA-Z]+)}/g, replacer)\n    .replace(/<%=([a-zA-Z]+)%>/g, (match, p1) => {\n      warn(\"<%= varName %> is deprecated, please use ${varName} instead\")\n      return replacer(match, p1.trim())\n    })\n\n  const outputPath = await tmpDir.getTempFile({suffix: path.basename(templatePath, \".tpl\")})\n  await outputFile(outputPath, config)\n  return outputPath\n}\n"]}
