{"version":3,"file":"Archive.js","sourceRoot":"","sources":["../src/Archive.ts"],"names":[],"mappings":";;;;;cAsBC,AAED,AAAM;;;AAOJ,AAAiC;AACjC,AAAiC;AAEjC,AAAQ;AACN,AAAM,AAAC,wCAAyB,AAAI,KAAC,AAAiB,kBAAC,AAAM,yCAAmC,AAAI,KAAC,AAAoB,qBAAC,AAAM,MAAU,AAC5I;AAAC,AACF","sourcesContent":["import { Folder } from \"./Folder\"\nimport { SevenZArchiveEntry } from \"./SevenZArchiveEntry\"\nimport { SubStreamsInfo } from \"./SevenZFile\"\n\nexport class Archive {\n  // A relative file pointer to the first stream of data in the 7z file (relative to the end of the 7z signature header)\n  packPosition: number\n\n  // file index to file packed size\n  packedSizes: Array<number>\n\n  // ignore - not required\n  // packedCrcsDefined: BitSet\n  // packCrcs: Array<number>\n\n  folders: Array<Folder>\n  subStreamsInfo: SubStreamsInfo\n\n  files: Array<SevenZArchiveEntry>\n  streamMap: StreamMap\n\n  headerSize: number\n}\n\nexport class StreamMap {\n  // Offset to beginning of this pack stream's data, relative to the beginning of the first pack stream.\n  packStreamOffsets: Array<number>\n\n  // Index of first file for each folder.\n  folderFirstFileIndex: Array<number>\n\n  // Index of folder for each file.\n  // fileFolderIndex: Array<number>\n\n  toString() {\n    return `StreamMap, offsets of ${this.packStreamOffsets.length} packed streams, first files of ${this.folderFirstFileIndex.length} folders`\n  }\n}"]}
