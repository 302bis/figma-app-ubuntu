{"version":3,"file":"arch.js","sourceRoot":"","sources":["../src/arch.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAY,AAEX;AAFD,WAAY,AAAI;AACd,6BAAI;AAAE,4BAAG;AAAE,+BAAM,AACnB;AAAC,GAFW,AAAI,wBAAJ,AAAI,OAEf,AAED,AAAM;2BAA4B,AAAU;AAC1C,AAAM,WAAC,AAAI,SAAK,AAAI,KAAC,AAAI,AAAC,AAAC,OAAC,AAAM,AAAC,AAAC,AAAC,SAAC,AAAI,SAAK,AAAI,KAAC,AAAG,AAAC,AAAC,MAAC,AAAO,AAAC,AAAC,UAAC,AAAQ,AAAC,AAC/E;AAAC,AAID,AAAM;uBAAwB,AAAU;AACtC,AAAM,WAAC,AAAI,SAAK,AAAI,KAAC,AAAG,AAAC,AAAC,MAAC,AAAE,AAAC,AAAC,AAAC,SAAI,AAAI,KAAC,AAAI,AAAC,KAAE,AAClD;AAAC,AAED,AAAM;wBAAyB,AAAY;AACzC,AAAM,AAAC,YAAC,AAAI,AAAC,AAAC,AAAC;AACb,aAAK,AAAK;AACR,AAAM,mBAAC,AAAI,KAAC,AAAG;AAEjB,aAAK,AAAM;AACT,AAAM,mBAAC,AAAI,KAAC,AAAI;AAElB,aAAK,AAAQ;AACX,AAAM,mBAAC,AAAI,KAAC,AAAM;AAEpB;AACE,kBAAM,IAAI,AAAK,AAAC,0BAAoB,AAAI,IAAE,AAAC,AAC/C,AAAC,AACH;;AAAC","sourcesContent":["export enum Arch {\n  ia32, x64, armv7l\n}\n\nexport function toLinuxArchString(arch: Arch) {\n  return arch === Arch.ia32 ? \"i386\" : (arch === Arch.x64 ? \"amd64\" : \"armv7l\")\n}\n\nexport type ArchType = \"x64\" | \"ia32\" | \"armv7l\"\n\nexport function getArchSuffix(arch: Arch): string {\n  return arch === Arch.x64 ? \"\" : `-${Arch[arch]}`\n}\n\nexport function archFromString(name: string): Arch {\n  switch (name) {\n    case \"x64\":\n      return Arch.x64\n\n    case \"ia32\":\n      return Arch.ia32\n\n    case \"armv7l\":\n      return Arch.armv7l\n\n    default:\n      throw new Error(`Unsupported arch ${name}`)\n  }\n}"]}
