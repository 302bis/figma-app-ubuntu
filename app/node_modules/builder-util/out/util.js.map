{"version":3,"file":"util.js","sourceRoot":"","sources":["../src/util.ts"],"names":[],"mappings":";;;;;;;;;AACA,AAAO,AAAE,AAAiB,AAAE,AAAM,AAAsB;;;;;;;mEAU/C,AAAiB,AAAE,AAAM,AAAsB,AACxD,AAAO;;;;;;;;;;;;;+CAAE,AAAM,AAAE,AAAM,AAAW,AAClC,AAAO;;;;;;;;;;;;;qCAAE,AAAG;;;;;;qCAAE,AAAI;;;;;;qCAAE,AAAI,AAAE,AAAM,AAAO,AACvC,AAAO;;;;;;;;;;;;;uDAAE,AAAa;;;;;;uDAAE,AAAY,AAAE,AAAM,AAAgB,AAC5D,AAAO;;;;;;;;;;;;;uCAAE,AAAQ;;;;;;uCAAE,AAA4B,AAAE,AAAM,AAAQ,AAC/D,AAAO;;;;;;;;;;;;;uCAAE,AAAI;;;;;;uCAAE,AAAiB;;;;;;uCAAE,AAAa;;;;;;uCAAY,AAAc,AAAE,AAAM,AAAQ,AACzF,AAAO;;;;;;;;;;;;;+DAAE,AAAgB,AAAE,AAAM,AAAoB,AACrD,AAAO;;;;;;;;;;;;;qDAAE,AAAW,AAAE,AAAM,AAAe,AAE3C,AAAO;;;;;;;;;;;;;uCAAE,AAAQ,AAAE,AAAM,AAAQ,AACjC,AAAO;;;;;;;;;;;;;mCAAE,AAAQ,AAAE,AAAM,AAAM,AAC/B,AAAO;;;;;;mEAAE,AAAO,AAAE,AAAM,AAAsB,AAE9C,AAAM;;;;;;;;;;;;;;;;;;;;;;;;AAxBN,AAAO,AAAe,AAAM,AAAc;;;;;;AAE1C,AAAO,AAAK,AAAM,AAAO;;;;;;AACzB,AAAO,AAAgB,AAAQ,AAAE,AAAK,AAAI,AAAM,AAAiC,AAAM,AAAe;;;;;;AACtG,AAAO,AAAE,AAAU,AAAE,AAAM,AAAQ;;;;AACnC,AAAO,AAAM,AAAM,AAAO;;;;AAC1B,AAAO,AAAE,AAAO,AAAE,AAAM,AAAE,AAAM,AAAI;;;;AACpC,AAAO,AAAK,AAAI,AAAM,AAAM;;AAC5B,AAAO,AAA6B;;;;AACpC,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAS,AAElC,AAAO;;;;;;;;AAaA,MAAM,AAAK,wBAAG,AAAM,qBAAC,AAAkB,AAAC,AAC/C,AAAM;AAAC,MAAM,AAAO,4BAAG,AAAM,qBAAC,AAAqB,AAAC,AAEpD,AAAM;yBAA0B,AAAc;AAC5C,AAAM,WAAC,AAAQ,0CAAC,AAAM,QAAE,EAAC,AAAS,WAAE,AAAI,AAAC,AAAC,AAC5C;AAAC,AAED,AAAM;wBAAyB,AAAa;AAC1C,AAAM,iBAAO,AAAO,QAAC,AAA2C,6CAAE,CAAC,AAAK,OAAE,AAAE,IAAE,AAAE,AAAE,AAAE;AAClF,AAAE,AAAC,YAAC,AAAE,GAAC,AAAI,AAAE,WAAK,AAAI,QAAI,AAAE,GAAC,AAAU,WAAC,AAAmB,AAAC,AAAC,sBAAC,AAAC;AAC7D,AAAU;AACV,AAAM,AAAC,sBAAG,AAAE,KAAG,AAAE,EAAE,AACrB;AAAC;AACD,AAAM,AAAC,kBAAG,AAAE,KAAG,AAAU,4CAAC,AAAQ,AAAC,UAAC,AAAM,OAAC,AAAE,AAAC,IAAC,AAAM,OAAC,AAAK,AAAC,MAAgB,AAC9E;AAAC,AAAC,AACJ,KAPS,AAAK;AAOb;AAED,uBAAuB,AAA6D;AAClF,AAAE,AAAC,QAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,AAAC,SAAC,AAAC;AACjC,AAAM,eAAC,AAAG,AACZ;AAAC;AAED,UAAM,AAAQ,yBACT,IAAC,AAAG,OAAI,AAAO,QAAC,AAAG,AAAC,AACxB;AAED,AAA4D;AAC5D,AAAkI;AAClI,AAAQ,aAAC,AAAI,OAAG,AAAa;AAC7B,AAAQ,aAAC,AAAQ,WAAG,AAAa;AACjC,AAAQ,aAAC,AAAM,SAAG,AAAa;AAC/B,AAAM,WAAC,AAAQ,AACjB;AAAC,AAED,AAAM;cAAe,AAAY,MAAE,AAA2B,MAAE,AAAyB,SAAE,AAAe,kBAAG,AAAI;AAC/G,AAAE,AAAC,QAAC,AAAK,MAAC,AAAO,AAAC,SAAC,AAAC;AAClB,AAAK,AAAC,2BAAa,AAAI,QAAI,AAAI,QAAI,AAAI,AAAC,AAAC,OAAC,AAAE,AAAC,AAAC,KAAC,AAAc,eAAC,AAAI,KAAC,AAAI,KAAC,AAAG,AAAC,AAAC,KAAE,AAAC;AAChF,AAAE,AAAC,YAAC,AAAO,WAAI,AAAI,QAAI,AAAO,QAAC,AAAG,OAAI,AAAI,AAAC,MAAC,AAAC;AAC3C,kBAAM,AAAO,4BAAO,AAAO,QAAC,AAAG,AAAC;AAChC,AAAG,AAAC,iBAAC,MAAM,AAAI,QAAI,AAAM,OAAC,AAAI,KAAC,AAAO,QAAC,AAAG,AAAC,AAAC,MAAC,AAAC;AAC5C,AAAE,AAAC,oBAAC,AAAO,QAAC,AAAG,IAAC,AAAI,AAAC,UAAK,AAAO,QAAC,AAAG,IAAC,AAAI,AAAC,AAAC,OAAC,AAAC;AAC5C,2BAAO,AAAO,QAAC,AAAI,AAAC,AACtB;AAAC,AACH;AAAC;AACD,AAAK,AAAC,0BAAQ,AAAiB,2EAAC,AAAO,AAAC,QAAE,AAAC,AAC7C;AAAC;AACD,AAAE,AAAC,YAAC,AAAO,WAAI,AAAI,QAAI,AAAO,QAAC,AAAG,OAAI,AAAI,AAAC,MAAC,AAAC;AAC3C,AAAK,AAAC,0BAAQ,AAAO,QAAC,AAAG,GAAE,AAAC,AAC9B;AAAC,AACH;AAAC;AAED,AAAM,6DAA6B,CAAC,AAAO,SAAE,AAAM,AAAE,AAAE;AACrD,AAAQ,gEAAC,AAAI,MAAE,AAAW,wBACvB,AAAO,WACV,AAAS,WAAE,AAAE,KAAG,AAAI,OAAG,AAAI,MAC3B,AAAG,KAAE,AAAa,cAAC,AAAO,WAAI,AAAI,AAAC,AAAC,OAAC,AAAI,AAAC,AAAC,OAAC,AAAO,QAAC,AAAG,AAAC,SACvD,CAAC,AAAK,OAAE,AAAM,QAAE,AAAM,AAAE,AAAE;AACzB,AAAE,AAAC,gBAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AAClB,AAAE,AAAC,oBAAC,AAAe,mBAAI,AAAK,MAAC,AAAO,AAAC,SAAC,AAAC;AACrC,AAAE,AAAC,wBAAC,AAAM,OAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACxB,AAAK,8BAAC,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,AAAC,AAAC,UAAC,AAAc,eAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,AAAC,AAAC,cAAC,AAAM,AAAC,AAC3E;AAAC;AACD,AAAE,AAAC,wBAAC,AAAM,OAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACxB,AAAK,8BAAC,AAAM,AAAC,AACf;AAAC,AACH;AAAC;AACD,AAAO,wBAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,AAC5B;AAAC,AACD,AAAI,mBAAC,AAAC;AACJ,oBAAI,AAAO,UAAG,AAAK,kCAAC,AAAG,IAAC,AAAc,AAAC,6BAAe,AAAa,MAAC,AAAI,SAAK,AAAK,MAAC,AAAO,OAAE,AAAC,AAAC;AAC9F,AAAE,AAAC,oBAAC,AAAM,OAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACxB,AAAE,AAAC,wBAAC,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,AAAC,SAAC,AAAC;AAC1B,AAAM,iCAAG,AAAc,eAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,AAC5C;AAAC;AACD,AAAO,AAAI,oCAAK,AAAK,kCAAC,AAAM,OAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,WAAE,AACnD;AAAC;AACD,AAAE,AAAC,oBAAC,AAAM,OAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACxB,AAAE,AAAC,wBAAC,AAAI,KAAC,AAAQ,SAAC,AAAM,AAAC,AAAC,SAAC,AAAC;AAC1B,AAAM,iCAAG,AAAc,eAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,AAC5C;AAAC;AACD,AAAO,AAAI,oCAAK,AAAK,kCAAC,AAAG,IAAC,AAAM,OAAC,AAAQ,AAAE,AAAC,WAAE,AAChD;AAAC;AAED,AAAM,uBAAC,IAAI,AAAK,MAAC,AAAO,AAAC,AAAC,AAC5B;AAAC,AACH;AAAC,AAAC,AACJ;AAAC,AAAC,AACJ,KApCS,AAAI,AAAe;AAoC3B;AAED,wBAAwB,AAAW;AACjC,AAAM,WAAC,AAAG,IAAC,AAAQ,AAAE,WAClB,AAAK,MAAC,AAAI,AAAC,MACX,AAAM,OAAC,AAAE,AAAC,AAAE,MAAC,CAAC,AAAE,GAAC,AAAQ,SAAC,AAAyE,AAAC,8EAAI,CAAC,AAAE,GAAC,AAAQ,SAAC,AAAmG,AAAC,AAAC,sGAC1N,AAAI,KAAC,AAAI,AAAC,AAEf;AAAC,AAOD,AAAM;iBAAkB,AAAe,SAAE,AAAmB,MAAE,AAAsB,SAAE,AAAgC;AACpH,AAAE,AAAC,QAAC,AAAO,WAAI,AAAI,AAAC,MAAC,AAAC;AACpB,AAAO,kBAAG,AAAE,AACd;AAAC;AAED,AAAO,YAAC,AAAG,MAAG,AAAa,cAAC,AAAO,QAAC,AAAG,AAAC;AAExC,UAAM,AAAc,iBAAG,AAAY,gBAAI,AAAI,QAAI,AAAY,aAAC,AAAc,kBAAI,AAAI,AAAC,AAAC,OAAC,AAAK,MAAC,AAAO,AAAC,AAAC,UAAC,AAAY,aAAC,AAAc;AAChI,AAAE,AAAC,QAAC,AAAO,QAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AAC1B,AAA6G;AAC7G,AAAO,gBAAC,AAAK,QAAG,CAAC,AAAY,gBAAI,AAAI,QAAI,AAAY,aAAC,AAAW,AAAC,AAAC,cAAC,AAAM,AAAC,AAAC,SAAC,AAAQ,UAAE,AAAc,AAAC,AAAC,iBAAC,AAAS,AAAC,AAAC,YAAC,AAAM,QAAE,AAAc,AAAC,AAAC,iBAAC,AAAS,AAAC,AAAC,YAAC,AAAM,AAAC,AAClK;AAAC;AAED,AAAgI;AAChI,AAAE,AAAC,QAAC,AAAK,MAAC,AAAO,AAAC,SAAC,AAAC;AAClB,cAAM,AAAU,aAAG,AAAI,KAAC,AAAI,KAAC,AAAG,AAAC;AACjC,AAAK,AAAC,0BAAY,AAAO,WAAI,AAAO,YAAK,AAAQ,AAAC,AAAC,WAAC,AAAU,AAAC,AAAC,aAAC,AAAc,eAAC,AAAU,AAAC,WAAE,AAAC;AAC9F,AAAE,AAAC,YAAC,AAAO,WAAI,AAAI,QAAI,AAAO,QAAC,AAAG,OAAI,AAAI,AAAC,MAAC,AAAC;AAC3C,AAAK,AAAC,0BAAQ,AAAO,QAAC,AAAG,GAAE,AAAC,AAC9B;AAAC,AACH;AAAC;AAED,QAAI,AAAC;AACH,AAAM,eAAC,AAAM,qDAAC,AAAO,SAAE,AAAI,MAAE,AAAO,AAAC,AACvC;AAAC,MACD,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,cAAM,IAAI,AAAK,AAAC,sBAAgB,AAAO,YAAK,AAAC,EAAC,AAAK,SAAI,AAAC,CAAE,AAAC,AAC7D;AAAC,AACH;AAAC,AAED,AAAM;uBAAwB,AAAe,SAAE,AAAmB,MAAE,AAAY,MAAE,AAAsB,SAAE,iBAA0B,AAAK;AACvI,UAAM,AAAY,eAAG,AAAO,QAAC,AAAO,SAAE,AAAI,MAAE,AAAO,SAAE,EAAC,AAAW,aAAE,AAAI,MAAE,AAAc,AAAC,AAAC;AACzF,UAAM,AAAO,UAAG,AAAU,WAAC,AAAG,AAAE,MAAC,AAAY,aAAC,AAAI,AAAE,QAAE,AAAC,IAAG,AAAE,KAAG,AAAI,AAAC;AACpE,AAAM,6DAA0B,CAAC,AAAO,SAAE,AAAM,AAAE,AAAE;AAClD,AAAa,sBAAC,AAAO,SAAE,AAAY,cAAE,AAAO,SAAE,AAAG,AAAE;AACjD,gBAAI,AAAC;AACH,AAAY,6BAAC,AAAO,AAAC,AACvB;AAAC,sBACO,AAAC;AACP,AAAO,AAAE,AACX;AAAC,AACH;AAAC,WAAE,AAAK,AAAC,AAAE;AACT,gBAAI,AAAC;AACH,AAAY,6BAAC,AAAO,AAAC,AACvB;AAAC,sBACO,AAAC;AACP,AAAM,uBAAC,AAAK,MAAC,AAAK,SAAI,AAAK,MAAC,AAAQ,AAAE,AAAC,AACzC;AAAC,AACH;AAAC,AAAC;AAEF,AAAY,qBAAC,AAAK,MAAC,AAAG,IAAC,AAAI,AAAC,AAC9B;AAAC,AAAC,AACJ,KAnBS,AAAI,AAAe;AAmB3B,AAED,AAAM;eAAgB,AAAe,SAAE,AAA2B,MAAE,AAAsB,SAAE,AAAgC;AAC1H,AAAM,6DAA0B,CAAC,AAAO,SAAE,AAAM,AAAE,AAAE;AAClD,AAAa,sBAAC,AAAO,SAAE,AAAO,QAAC,AAAO,SAAE,AAAI,QAAI,AAAE,IAAE,AAAO,SAAE,AAAY,AAAC,eAAE,AAAO,SAAE,AAAO,SAAE,AAAM,AAAC,AACvG;AAAC,AAAC,AACJ,KAHS,AAAI,AAAe;AAG3B,AAED,AAAM;uBAAwB,AAAa,OAAE,AAA0B,cAAE,AAAe,SAAE,AAAuC,SAAE,AAA8B;AAC/J,AAAY,iBAAC,AAAE,GAAC,AAAO,SAAE,AAAM,AAAC;AAEhC,QAAI,AAAG,MAAG,AAAE;AACZ,AAAE,AAAC,QAAC,CAAC,AAAK,MAAC,AAAO,WAAI,AAAY,aAAC,AAAM,UAAI,AAAI,AAAC,MAAC,AAAC;AAClD,AAAY,qBAAC,AAAM,OAAC,AAAE,GAAC,AAAM,QAAG,AAAY,AAAE,AAAE,IAAjB;AAC7B,AAAG,mBAAI,AAAI,AACb;AAAC,AAAC,AACJ;AAAC;AAED,QAAI,AAAQ,WAAG,AAAE;AACjB,AAAE,AAAC,QAAC,AAAY,aAAC,AAAM,UAAI,AAAI,AAAC,MAAC,AAAC;AAChC,AAAY,qBAAC,AAAM,OAAC,AAAE,GAAC,AAAM,QAAG,AAAY,AAAE,AAAE,IAAjB;AAC7B,AAAQ,wBAAI,AAAI,AAClB;AAAC,AAAC,AACJ;AAAC;AAED,AAAY,iBAAC,AAAI,KAAC,AAAK,OAAG,AAAY,AAAE,AAAE,IAAjB;AACvB,AAAE,AAAC,YAAC,AAAI,SAAK,AAAC,KAAI,AAAK,MAAC,AAAO,AAAC,SAAC,AAAC;AAChC,AAAK,AAAC,qBAAG,AAAI,MAAC,AAAQ,SAAC,AAAO,AAAC,aAAK,AAAY,aAAC,AAAG,GAA2B,AAAC,AAClF;AAAC;AAED,AAAE,AAAC,YAAC,AAAI,SAAK,AAAC,AAAC,GAAC,AAAC;AACf,AAAE,AAAC,gBAAC,AAAO,WAAI,AAAI,AAAC,MAAC,AAAC;AACpB,AAAO,AAAE,AACX;AAAC,AACH;AAAC,AACD,AAAI,eAAC,AAAC;AACJ,+BAAmB,AAAY,MAAE,AAAa;AAC5C,AAAM,uBAAC,AAAI,KAAC,AAAM,WAAK,AAAC,AAAC,AAAC,IAAC,AAAE,AAAC,AAAC,AAAC,UAAK,AAAK,WAAM,AAAI,IAAE,AACxD;AAAC;AAED,AAAM,mBAAC,IAAI,AAAK,AAAC,SAAG,AAAO,4BAAqB,AAAI,OAAG,AAAS,UAAC,AAAG,KAAE,AAAQ,AAAC,YAAG,AAAS,UAAC,AAAQ,UAAE,AAAc,AAAC,eAAE,AAAC,AAAC,AAC3H;AAAC,AACH;AAAC,AAAC,AACJ;AAAC,AAED,AAAM;aAAoB,AAAe,OAAE,AAAkB;AAC3D,AAAM,WAAC,AAAK,SAAI,AAAI,AAAC,AAAC,OAAC,AAAI,AAAC,AAAC,OAAC,AAAI,KAAC,AAAK,AAAC,AAC3C;AAAC,AAED,AAAM;qBAAsB,AAAkB;AAC5C,UAAM,AAAI,OAAG,CAAC,AAAO,SAAE,AAAK,AAAC;AAC7B,AAAE,AAAC,QAAC,AAAO,QAAC,AAAO,AAAC,SAAC,AAAC;AACpB,AAAI,aAAC,AAAI,KAAC,AAAK,AAAC,AAClB;AAAC;AACD,AAAM,WAAC,AAAI,AACb;AAAC,AAED,AAAM;yBAA0B,AAA4B;AAC1D,AAAM,WAAC,AAAC,KAAI,AAAI,QAAI,AAAC,EAAC,AAAI,AAAE,OAAC,AAAM,WAAK,AAAC,AAC3C;AAAC,AAED,AAAM;0BAA2B,AAAa;AAC5C,AAAM,WAAC,AAAc,gBAAC,AAAI,KAAC,AAAK,AAAC,AACnC;;AAAC,AAED,AAAM;;AACJ,UAAM,AAAG,MAAG,AAAO,QAAC,AAAG,IAAC,AAAsB;AAC9C,AAAE,AAAC,QAAC,CAAC,AAAe,gBAAC,AAAG,AAAC,AAAC,MAAC,AAAC;AAC1B,AAAM,eAAC,AAAI,AACb;AAAC;AAED,AAAE,AAAC,QAAC,AAAO,QAAC,AAAQ,aAAK,AAAQ,AAAC,UAAC,AAAC;AAClC,AAAM,eAAC,AAAI,MAAC,AAAI,KAAC,AAAO,AAAE,oCAAE,AAAS,WAAE,AAAQ,UAAE,AAAkB,AAAC,AACtE;AAAC;AAED,UAAM,AAAY,eAAG,AAAO,QAAC,AAAG,IAAC,AAAY;AAC7C,AAAE,AAAC,QAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,WAAI,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AACzD,AAAoE;AACpE,AAAE,AAAC,YAAC,AAAY,aAAC,AAAW,AAAE,cAAC,AAAQ,SAAC,AAAuB,AAAC,4BAAI,CAAC,AAAO,QAAC,AAAG,IAAC,AAAQ,YAAI,AAAE,AAAC,IAAC,AAAW,AAAE,kBAAK,AAAQ,AAAC,UAAC,AAAC;AAC5H,AAAM,mBAAC,AAAI,MAAC,AAAI,KAAC,AAAM,AAAE,mCAAE,AAAwB,AAAC,AACtD;AAAC;AACD,AAAM,eAAC,AAAI,MAAC,AAAI,KAAC,AAAY,cAAE,AAAkB,oBAAE,AAAO,AAAC,AAC7D;AAAC;AAED,AAAM,WAAC,AAAI,MAAC,AAAI,KAAC,AAAO,AAAE,oCAAE,AAAQ,UAAE,AAAkB,AAAC,AAC3D;AAAC;AAED,AAAoG;AACpG,AAAmE,AACnE,AAAM;iBAAkB,AAAS;AAC/B,AAAkB;AAClB,AAAC,QAAG,AAAC,EAAC,AAAO,QAAC,AAAuB,yBAAE,AAAU,AAAC;AAClD,AAAgC;AAChC,AAAC,QAAG,AAAC,EAAC,AAAO,QAAC,AAAI,MAAE,AAAQ,AAAC;AAC7B,AAAkB;AAClB,AAAC,QAAG,AAAC,EAAC,AAAO,QAAC,AAA6B,+BAAE,AAAU,AAAC;AACxD,AAAkB;AAClB,AAAC,QAAG,AAAC,EAAC,AAAO,QAAC,AAAI,MAAE,AAAQ,AAAC;AAC7B,AAAM,WAAC,AAAC,AACV;AAAC,AAED,AAAM;kBAAyB,AAAqB,KAAE,AAAM,KAAE,AAAQ;AACpE,UAAM,AAAI,OAAG,AAAG,IAAC,AAAG,IAAC,AAAG,AAAC;AACzB,AAAE,AAAC,QAAC,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACjB,AAAG,YAAC,AAAG,IAAC,AAAG,KAAE,CAAC,AAAK,AAAC,AAAC,AACvB;AAAC,AACD,AAAI,WAAC,AAAE,AAAC,IAAC,CAAC,AAAI,KAAC,AAAQ,SAAC,AAAK,AAAC,AAAC,QAAC,AAAC;AAC/B,AAAI,aAAC,AAAI,KAAC,AAAK,AAAC,AAClB;AAAC,AACH;AAAC,AAED,AAAM;wBAAyB,AAAwC,QAAE,AAA0B;AACjG,AAAE,AAAC,QAAC,AAAM,UAAI,AAAI,AAAC,MAAC,AAAC;AACnB,AAAM,eAAC,AAAW,AACpB;AAAC;AAED,UAAM,AAAK,QAAG,AAAM,OAAC,AAAO,QAAC,AAAS,AAAC;AACvC,AAAE,AAAC,QAAC,AAAK,SAAI,AAAC,AAAC,GAAC,AAAC;AACf,cAAM,AAAI,OAAG,AAAM,OAAC,AAAK,MAAC,AAAC,GAAE,AAAK,AAAC;AACnC,AAAI,aAAC,AAAI,KAAC,GAAG,AAAW,AAAC;AACzB,AAAE,AAAC,YAAC,AAAK,AAAK,UAAC,AAAM,OAAC,AAAM,SAAG,AAAC,AAAC,AAAC,GAAC,AAAC;AAClC,AAAI,iBAAC,AAAI,KAAC,GAAG,AAAM,OAAC,AAAK,MAAC,AAAK,QAAG,AAAC,AAAC,AAAC,AACvC;AAAC;AACD,AAAM,iBAAG,AAAI,AACf;AAAC;AACD,AAAM,WAAC,AAAM,AACf;AAAC,AAED,AAAM;iCAAkC,AAAgC,OAAE,AAAc;AACtF,AAAE,AAAC,QAAC,AAAK,UAAK,AAAS,AAAC,WAAC,AAAC;AACxB,AAAM,eAAC,AAAS,AAClB;AAAC;AACD,AAAE,AAAC,QAAC,AAAK,UAAK,AAAI,AAAC,MAAC,AAAC;AACnB,AAAM,eAAC,AAAI,AACb;AAAC;AAED,AAAE,AAAC,QAAC,CAAC,AAAK,MAAC,AAAQ,SAAC,AAAG,AAAC,AAAC,MAAC,AAAC;AACzB,AAAM,AAAC,kBAAG,AAAK,SAAI,AAAK,AAAC,AAAC,QAAC,AAAM,AAAC,AAAC,SAAC,AAAK,KAAE,AAC7C;AAAC;AAED,AAAM,WAAC,AAAK,MAAC,AAAO,QAAC,AAAK,AAAC,AAAC,QAAC,AAAM,AAAC,AAAC,SAAC,AAAO,SAAE,AAAK,AAAC,AAAC,QAAC,AAAO,AAAC,AAAC,UAAC,AAAM,AAAC,AAC1E;AAAC,AAED,AAAM;;AACJ,AAA0H;AAC1H,mBAAe,AAAyB;AACtC,AAAwC;AACxC,AAAM,eAAC,AAAK,SAAI,AAAK,UAAK,AAAO,AACnC;AAAC;AAED,AAAM,WAAC,AAAK,MAAC,AAAO,QAAC,AAAG,IAAC,AAAmB,AAAC,wBAAI,AAAK,MAAC,AAAO,QAAC,AAAG,IAAC,AAAe,AAAC,oBAAI,AAAK,MAAC,AAAO,QAAC,AAAG,IAAC,AAAgB,AAAC,qBAAI,AAAK,MAAC,AAAO,QAAC,AAAG,IAAC,AAAoB,AAAC,yBAAI,AAAK,MAAC,AAAO,QAAC,AAAG,IAAC,AAA4B,AAAC,AAC1N;AAAC,AAED,AAAM;mBAAoB,AAAgC;AACxD,AAAE,AAAC,QAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AAClB,AAAK,gBAAG,AAAK,MAAC,AAAI,AAAE,AACtB;AAAC;AACD,AAAM,WAAC,AAAK,UAAK,AAAM,UAAI,AAAK,UAAK,AAAE,MAAI,AAAK,UAAK,AAAG,AAC1D;AAAC","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { safeStringifyJson } from \"builder-util-runtime\"\nimport chalk from \"chalk\"\nimport { ChildProcess, execFile, spawn as _spawn, SpawnOptions, ExecFileOptions } from \"child_process\"\nimport { createHash } from \"crypto\"\nimport _debug from \"debug\"\nimport { homedir, tmpdir } from \"os\"\nimport * as path from \"path\"\nimport \"source-map-support/register\"\nimport { safeDump } from \"js-yaml\"\n\nexport { safeStringifyJson } from \"builder-util-runtime\"\nexport { TmpDir } from \"temp-file\"\nexport { log, warn, task } from \"./log\"\nexport { isMacOsSierra, isCanSignDmg } from \"./macosVersion\"\nexport { execWine, prepareWindowsExecutableArgs } from \"./wine\"\nexport { Arch, toLinuxArchString, getArchSuffix, ArchType, archFromString } from \"./arch\"\nexport { AsyncTaskManager } from \"./asyncTaskManager\"\nexport { DebugLogger } from \"./DebugLogger\"\n\nexport { hashFile } from \"./hash\"\nexport { copyFile } from \"./fs\"\nexport { asArray } from \"builder-util-runtime\"\n\nexport const debug = _debug(\"electron-builder\")\nexport const debug7z = _debug(\"electron-builder:7z\")\n\nexport function serializeToYaml(object: object) {\n  return safeDump(object, {lineWidth: 8000})\n}\n\nexport function removePassword(input: string) {\n  return input.replace(/(-String |-P |pass:| \\/p |-pass )([^ ]+)/g, (match, p1, p2) => {\n    if (p1.trim() === \"/p\" && p2.startsWith(\"\\\\\\\\Mac\\\\Host\\\\\\\\\")) {\n      // appx /p\n      return `${p1}${p2}`\n    }\n    return `${p1}${createHash(\"sha256\").update(p2).digest(\"hex\")} (sha256 hash)`\n  })\n}\n\nfunction getProcessEnv(env: { [key: string]: string | undefined } | undefined | null) {\n  if (process.platform === \"win32\") {\n    return env\n  }\n\n  const finalEnv = {\n    ...(env || process.env)\n  }\n\n  // without LC_CTYPE dpkg can returns encoded unicode symbols\n  // set LC_CTYPE to avoid crash https://github.com/electron-userland/electron-builder/issues/503 Even \"en_DE.UTF-8\" leads to error.\n  finalEnv.LANG = \"en_US.UTF-8\"\n  finalEnv.LC_CTYPE = \"en_US.UTF-8\"\n  finalEnv.LC_ALL = \"en_US.UTF-8\"\n  return finalEnv\n}\n\nexport function exec(file: string, args?: Array<string> | null, options?: ExecFileOptions, isLogOutIfDebug = true): Promise<string> {\n  if (debug.enabled) {\n    debug(`Executing ${file} ${args == null ? \"\" : removePassword(args.join(\" \"))}`)\n    if (options != null && options.env != null) {\n      const diffEnv = {...options.env}\n      for (const name of Object.keys(process.env)) {\n        if (process.env[name] === options.env[name]) {\n          delete diffEnv[name]\n        }\n      }\n      debug(`env: ${safeStringifyJson(diffEnv)}`)\n    }\n    if (options != null && options.cwd != null) {\n      debug(`cwd: ${options.cwd}`)\n    }\n  }\n\n  return new BluebirdPromise<string>((resolve, reject) => {\n    execFile(file, args as any, {\n    ...options,\n    maxBuffer: 10 * 1024 * 1024,\n    env: getProcessEnv(options == null ? null : options.env),\n  }, (error, stdout, stderr) => {\n      if (error == null) {\n        if (isLogOutIfDebug && debug.enabled) {\n          if (stderr.length !== 0) {\n            debug(file.endsWith(\"wine\") ? removeWineSpam(stderr.toString()) : stderr)\n          }\n          if (stdout.length !== 0) {\n            debug(stdout)\n          }\n        }\n        resolve(stdout.toString())\n      }\n      else {\n        let message = chalk.red(removePassword(`Exit code: ${(error as any).code}. ${error.message}`))\n        if (stdout.length !== 0) {\n          if (file.endsWith(\"wine\")) {\n            stdout = removeWineSpam(stdout.toString())\n          }\n          message += `\\n${chalk.yellow(stdout.toString())}`\n        }\n        if (stderr.length !== 0) {\n          if (file.endsWith(\"wine\")) {\n            stderr = removeWineSpam(stderr.toString())\n          }\n          message += `\\n${chalk.red(stderr.toString())}`\n        }\n\n        reject(new Error(message))\n      }\n    })\n  })\n}\n\nfunction removeWineSpam(out: string) {\n  return out.toString()\n    .split(\"\\n\")\n    .filter(it => !it.includes(\"wine: cannot find L\\\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\winemenubuilder.exe\\\"\") && !it.includes(\"err:wineboot:ProcessRunKeys Error running cmd L\\\"C:\\\\\\\\windows\\\\\\\\system32\\\\\\\\winemenubuilder.exe\"))\n    .join(\"\\n\")\n\n}\n\nexport interface ExtraSpawnOptions {\n  isDebugEnabled?: boolean\n  isPipeInput?: boolean\n}\n\nexport function doSpawn(command: string, args: Array<string>, options?: SpawnOptions, extraOptions?: ExtraSpawnOptions): ChildProcess {\n  if (options == null) {\n    options = {}\n  }\n\n  options.env = getProcessEnv(options.env)\n\n  const isDebugEnabled = extraOptions == null || extraOptions.isDebugEnabled == null ? debug.enabled : extraOptions.isDebugEnabled\n  if (options.stdio == null) {\n    // do not ignore stdout/stderr if not debug, because in this case we will read into buffer and print on error\n    options.stdio = [extraOptions != null && extraOptions.isPipeInput ? \"pipe\" : \"ignore\", isDebugEnabled ? \"inherit\" : \"pipe\", isDebugEnabled ? \"inherit\" : \"pipe\"]\n  }\n\n  // use general debug.enabled to log spawn, because it doesn't produce a lot of output (the only line), but important in any case\n  if (debug.enabled) {\n    const argsString = args.join(\" \")\n    debug(`Spawning ${command} ${command === \"docker\" ? argsString : removePassword(argsString)}`)\n    if (options != null && options.cwd != null) {\n      debug(`cwd: ${options.cwd}`)\n    }\n  }\n\n  try {\n    return _spawn(command, args, options)\n  }\n  catch (e) {\n    throw new Error(`Cannot spawn ${command}: ${e.stack || e}`)\n  }\n}\n\nexport function spawnAndWrite(command: string, args: Array<string>, data: string, options?: SpawnOptions, isDebugEnabled: boolean = false) {\n  const childProcess = doSpawn(command, args, options, {isPipeInput: true, isDebugEnabled})\n  const timeout = setTimeout(() => childProcess.kill(), 4 * 60 * 1000)\n  return new BluebirdPromise<any>((resolve, reject) => {\n    handleProcess(\"close\", childProcess, command, () => {\n      try {\n        clearTimeout(timeout)\n      }\n      finally {\n        resolve()\n      }\n    }, error => {\n      try {\n        clearTimeout(timeout)\n      }\n      finally {\n        reject(error.stack || error.toString())\n      }\n    })\n\n    childProcess.stdin.end(data)\n  })\n}\n\nexport function spawn(command: string, args?: Array<string> | null, options?: SpawnOptions, extraOptions?: ExtraSpawnOptions): Promise<any> {\n  return new BluebirdPromise<any>((resolve, reject) => {\n    handleProcess(\"close\", doSpawn(command, args || [], options, extraOptions), command, resolve, reject)\n  })\n}\n\nexport function handleProcess(event: string, childProcess: ChildProcess, command: string, resolve: ((value?: any) => void) | null, reject: (reason?: any) => void) {\n  childProcess.on(\"error\", reject)\n\n  let out = \"\"\n  if (!debug.enabled && childProcess.stdout != null) {\n    childProcess.stdout.on(\"data\", (data: string) => {\n      out += data\n    })\n  }\n\n  let errorOut = \"\"\n  if (childProcess.stderr != null) {\n    childProcess.stderr.on(\"data\", (data: string) => {\n      errorOut += data\n    })\n  }\n\n  childProcess.once(event, (code: number) => {\n    if (code === 0 && debug.enabled) {\n      debug(`${path.basename(command)} (${childProcess.pid}) exited with exit code 0`)\n    }\n\n    if (code === 0) {\n      if (resolve != null) {\n        resolve()\n      }\n    }\n    else {\n      function formatOut(text: string, title: string) {\n        return text.length === 0 ? \"\" : `\\n${title}:\\n${text}`\n      }\n\n      reject(new Error(`${command} exited with code ${code}${formatOut(out, \"Output\")}${formatOut(errorOut, \"Error output\")}`))\n    }\n  })\n}\n\nexport function use<T, R>(value: T | null, task: (it: T) => R): R | null {\n  return value == null ? null : task(value)\n}\n\nexport function debug7zArgs(command: \"a\" | \"x\"): Array<string> {\n  const args = [command, \"-bd\"]\n  if (debug7z.enabled) {\n    args.push(\"-bb\")\n  }\n  return args\n}\n\nexport function isEmptyOrSpaces(s: string | null | undefined): s is \"\" | null | undefined {\n  return s == null || s.trim().length === 0\n}\n\nexport function isTokenCharValid(token: string) {\n  return /^[\\w\\/=+-]+$/.test(token)\n}\n\nexport function getCacheDirectory(): string {\n  const env = process.env.ELECTRON_BUILDER_CACHE\n  if (!isEmptyOrSpaces(env)) {\n    return env!\n  }\n\n  if (process.platform === \"darwin\") {\n    return path.join(homedir(), \"Library\", \"Caches\", \"electron-builder\")\n  }\n\n  const localappdata = process.env.LOCALAPPDATA\n  if (process.platform === \"win32\" && localappdata != null) {\n    // https://github.com/electron-userland/electron-builder/issues/1164\n    if (localappdata.toLowerCase().includes(\"\\\\windows\\\\system32\\\\\") || (process.env.USERNAME || \"\").toLowerCase() === \"system\") {\n      return path.join(tmpdir(), \"electron-builder-cache\")\n    }\n    return path.join(localappdata, \"electron-builder\", \"cache\")\n  }\n\n  return path.join(homedir(), \".cache\", \"electron-builder\")\n}\n\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\nexport function smarten(s: string): string {\n  // opening singles\n  s = s.replace(/(^|[-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  s = s.replace(/'/g, \"\\u2019\")\n  // opening doubles\n  s = s.replace(/(^|[-\\u2014/\\[(\\u2018\\s])\"/g, \"$1\\u201c\")\n  // closing doubles\n  s = s.replace(/\"/g, \"\\u201d\")\n  return s\n}\n\nexport function addValue<K, T>(map: Map<K, Array<T>>, key: K, value: T) {\n  const list = map.get(key)\n  if (list == null) {\n    map.set(key, [value])\n  }\n  else if (!list.includes(value)) {\n    list.push(value)\n  }\n}\n\nexport function replaceDefault(inList: Array<string> | null | undefined, defaultList: Array<string>): Array<string> {\n  if (inList == null) {\n    return defaultList\n  }\n\n  const index = inList.indexOf(\"default\")\n  if (index >= 0) {\n    const list = inList.slice(0, index)\n    list.push(...defaultList)\n    if (index !== (inList.length - 1)) {\n      list.push(...inList.slice(index + 1))\n    }\n    inList = list\n  }\n  return inList\n}\n\nexport function getPlatformIconFileName(value: string | null | undefined, isMac: boolean) {\n  if (value === undefined) {\n    return undefined\n  }\n  if (value === null) {\n    return null\n  }\n\n  if (!value.includes(\".\")) {\n    return `${value}.${isMac ? \"icns\" : \"ico\"}`\n  }\n\n  return value.replace(isMac ? \".ico\" : \".icns\", isMac ? \".icns\" : \".ico\")\n}\n\nexport function isPullRequest() {\n  // TRAVIS_PULL_REQUEST is set to the pull request number if the current job is a pull request build, or false if it’s not.\n  function isSet(value: string | undefined) {\n    // value can be or null, or empty string\n    return value && value !== \"false\"\n  }\n\n  return isSet(process.env.TRAVIS_PULL_REQUEST) || isSet(process.env.CI_PULL_REQUEST) || isSet(process.env.CI_PULL_REQUESTS) || isSet(process.env.BITRISE_PULL_REQUEST) || isSet(process.env.APPVEYOR_PULL_REQUEST_NUMBER)\n}\n\nexport function isEnvTrue(value: string | null | undefined) {\n  if (value != null) {\n    value = value.trim()\n  }\n  return value === \"true\" || value === \"\" || value === \"1\"\n}"]}
